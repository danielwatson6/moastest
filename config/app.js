// Generated by CoffeeScript 1.7.1
var app, bodyParser, connectAssets, controller, cookieParser, env, express, expressCoffee, favicon, i, morgan, name, options, paths, r, router, routes, stylus;

express = require('express');

favicon = require('serve-favicon');

morgan = require('morgan');

cookieParser = require('cookie-parser');

bodyParser = require('body-parser');

stylus = require('stylus');

connectAssets = require('connect-assets');

paths = require('./paths');

routes = require('./routes');

expressCoffee = require('../lib/express-coffee');

app = express();

app.use(morgan('dev'));

app.use(bodyParser());

app.use(cookieParser());

app.use(express["static"](paths["public"]));

app.set('views', paths.views);

app.set('view engine', 'jade');

env = app.get('env');

app.use(expressCoffee({
  path: paths["public"],
  live: env !== 'production',
  uglify: env === 'production',
  debug: env !== 'production'
}));

app.use(connectAssets({
  paths: [paths.javascripts, paths.stylesheets, paths.templates]
}));

for (r in routes) {
  options = {
    method: r.split(' ')[0].toLowerCase(),
    path: r.split(' ')[1]
  };
  i = routes[r].split('#');
  name = i[0];
  if ((i[1] == null) || i[1] === '') {
    console.log("Error in router:");
    throw "No method specified for controller '" + i[0] + "'";
  }
  options.action = i[1];
  controller = require("" + paths.controllers + "/" + name);
  if ((options.action != null) && (controller[options.action] == null)) {
    console.log("Error in router:");
    throw "No method '" + options.action + "' found in controller '" + name + "'";
  }
  options.action = controller[options.action];
  router = express.Router();
  router.route(options.path)[options.method](options.action);
  app.use(router);
}

module.exports = app;
